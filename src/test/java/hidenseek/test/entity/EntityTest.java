/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hidenseek.test.entity;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.Set;

import org.junit.jupiter.api.Test;

import hidenseek.model.components.Component;
import hidenseek.model.components.LifeComponent;
import hidenseek.model.components.LifeComponentImpl;
import hidenseek.model.components.LinearMovementComponentImpl;
import hidenseek.model.components.MoveComponent;
import hidenseek.model.entities.Entity;
import hidenseek.model.entities.AbstractEntity;

public class EntityTest {
    
    @Test public void testEntityComponents() {
        //Detach and Attach test
        Entity e = new AbstractEntity(){};
        assertTrue(e.getComponent(LifeComponent.class).isEmpty());
        e.attach(new LifeComponentImpl(100));
        assertFalse(e.getComponent(LifeComponent.class).isEmpty());
        e.detach(LifeComponent.class);
        assertTrue(e.getComponents().isEmpty());
        
        e.attach(new LifeComponentImpl(100));
        e.attach(new LinearMovementComponentImpl());  
        e.detach(LifeComponent.class);
        final Set<Component> components = e.getComponents();
        assertEquals(1, components.size());
        assertTrue(MoveComponent.class.isInstance(components.stream().findFirst().get()));
        assertEquals(e, e.getComponent(MoveComponent.class).get().getOwner().get());
    }
    
    @Test public void testLifeComponent() {
        Entity e = new AbstractEntity() {};
        LifeComponent l = new LifeComponentImpl(100);
        e.attach(l);
        assertTrue(l.getMaxHealth() == 100);
        l.hurt(10);
        assertEquals(90, l.getHealth());
        l.hurt(100);
        assertEquals(0, l.getHealth());
    }
    
}
